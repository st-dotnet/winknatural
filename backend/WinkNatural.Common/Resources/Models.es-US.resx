<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>Nombre es requerido</value>
  </data>
  <data name="TaxID" xml:space="preserve">
    <value>DNI</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Género</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Correo electrónico</value>
  </data>
  <data name="PrimaryPhone" xml:space="preserve">
    <value>Teléfono de la casa</value>
  </data>
  <data name="SecondaryPhone" xml:space="preserve">
    <value>Teléfono de la oficina</value>
  </data>
  <data name="MobilePhone" xml:space="preserve">
    <value>Teléfono Móvil</value>
  </data>
  <data name="FaxNumber" xml:space="preserve">
    <value>Número de fax</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Nombre de usuario</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="IncorrectEmail" xml:space="preserve">
    <value>Este no es un formato de correo electrónico correcto</value>
  </data>
  <data name="UsernameUnavailable" xml:space="preserve">
    <value>Este nombre de usuario no está disponible</value>
  </data>
  <data name="InvalidUsername" xml:space="preserve">
    <value>Asegúrate de que tu nombre de usuario no contiene espacios o caracteres especiales</value>
  </data>
  <data name="InvalidPasswordLength" xml:space="preserve">
    <value>Su contraseña debe tener como mínimo 6 caracteres</value>
  </data>
  <data name="AddressOneRequired" xml:space="preserve">
    <value>Se requiere Dirección</value>
  </data>
  <data name="AddressOne" xml:space="preserve">
    <value>Dirección </value>
  </data>
  <data name="AddressTwo" xml:space="preserve">
    <value>Dirección 2</value>
  </data>
  <data name="AddressTwoRequired" xml:space="preserve">
    <value>Se requiere Distrito</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>Se requiere la ciudad</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Ciudad</value>
  </data>
  <data name="StateRequired" xml:space="preserve">
    <value>Se requiere el Estado</value>
  </data>
  <data name="ZipRequired" xml:space="preserve">
    <value>Se requiere Código Postal</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Se requiere País</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Número De Teléfono</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Apellido</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Se requiere Apellido</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Se requiere correo electronico </value>
  </data>
  <data name="PhoneNumberRequired" xml:space="preserve">
    <value>Se requiere el número de teléfono</value>
  </data>
  <data name="BirthDateRequired" xml:space="preserve">
    <value>Se requiere la fecha de nacimiento</value>
  </data>
  <data name="PrimaryPhoneRequired" xml:space="preserve">
    <value>Se requiere teléfono de la casa</value>
  </data>
  <data name="MobilePhoneRequired" xml:space="preserve">
    <value>Se requiere teléfono móvil</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Se requiere nombre de usuario</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Se requiere una contraseña</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Estado </value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Código Postal</value>
  </data>
  <data name="ShowMyPassword" xml:space="preserve">
    <value>Mostrar mi contraseña</value>
  </data>
  <data name="NameOnCardRequired" xml:space="preserve">
    <value>El nombre es necesario</value>
  </data>
  <data name="CardNumberRequired" xml:space="preserve">
    <value>Se requiere el número de tarjeta</value>
  </data>
  <data name="ExpirationMonthRequired" xml:space="preserve">
    <value>Se requiere Mes de vencimiento</value>
  </data>
  <data name="ExpirationYearRequired" xml:space="preserve">
    <value>Se requiere Año de Vencimiento</value>
  </data>
  <data name="NameOnCard" xml:space="preserve">
    <value>Nombre en la tarjeta</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Número De Tarjeta</value>
  </data>
  <data name="ExpirationMonth" xml:space="preserve">
    <value>Mes de vencimiento en la tarjeta</value>
  </data>
  <data name="ExpirationYear" xml:space="preserve">
    <value>Año de vencimiento en la tarjeta</value>
  </data>
  <data name="CVV" xml:space="preserve">
    <value>CVV</value>
  </data>
  <data name="ExpirationDate" xml:space="preserve">
    <value>Fecha de Vencimiento</value>
  </data>
  <data name="AccountHolderNameRequired" xml:space="preserve">
    <value>Se requiere nombre del titular de la cuenta</value>
  </data>
  <data name="AccountHolderName" xml:space="preserve">
    <value>Nombre del titular de la cuenta</value>
  </data>
  <data name="BankNameRequired" xml:space="preserve">
    <value>Se requiere nombre del Banco</value>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Nombre del Banco</value>
  </data>
  <data name="CardNumberTooLong" xml:space="preserve">
    <value>Número de la tarjeta es muy largo</value>
  </data>
  <data name="CardNumberTooShort" xml:space="preserve">
    <value>Número de la tarjeta es muy corto</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>La contraseña debe ser de al menos 8 caracteres, debe contener 1 número y al menos una letra mayúscula</value>
  </data>
  <data name="NotRequired" xml:space="preserve">
    <value>No es necesario</value>
  </data>
  <data name="LoginName" xml:space="preserve">
    <value>Nombre de inicio de sesión</value>
  </data>
  <data name="SSNRequired" xml:space="preserve">
    <value>SSN / Tax ID  is required</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Mes</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Dia</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Año</value>
  </data>
</root>